{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dging\\\\Programming\\\\chess\\\\src\\\\components\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Square from './Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = _ref => {\n  _s();\n\n  let {\n    boardModel\n  } = _ref;\n  const [board, setBoard] = useState(boardModel);\n  const [selectedSquare, setSelectedSquare] = useState('');\n  useEffect(() => {\n    console.log(boardModel);\n  }, [boardModel]);\n  useEffect(() => {\n    console.log(selectedSquare);\n    console.log(board[selectedSquare[0]][selectedSquare[1]]);\n  }, [selectedSquare]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: board.slice(0).reverse().map((column, rowKey) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [column.slice(0).reverse().map((square, columnKey) => {\n          return /*#__PURE__*/_jsxDEV(Square, {\n            square: square,\n            position: [columnKey, rowKey],\n            onClick: () => setSelectedSquare([columnKey, 7 - rowKey])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 36\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Board, \"JyLDcpYu7K+POkEBH3BjavCJN2M=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/dging/Programming/chess/src/components/Board.js"],"names":["React","useState","useEffect","Square","Board","boardModel","board","setBoard","selectedSquare","setSelectedSquare","console","log","slice","reverse","map","column","rowKey","display","square","columnKey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,KAAK,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AAE9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,UAAD,CAAlC;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AACH,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACE,cAAc,CAAC,CAAD,CAAf,CAAL,CAAyBA,cAAc,CAAC,CAAD,CAAvC,CAAZ;AACH,GAHQ,EAGN,CAACA,cAAD,CAHM,CAAT;AAKA,sBACI;AAAA,cACKF,KAAK,CAACM,KAAN,CAAY,CAAZ,EAAeC,OAAf,GAAyBC,GAAzB,CAA6B,CAACC,MAAD,EAASC,MAAT,KAAoB;AAC9C,0BACI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA,mBACKF,MAAM,CAACH,KAAP,CAAa,CAAb,EAAgBC,OAAhB,GAA0BC,GAA1B,CAA8B,CAACI,MAAD,EAASC,SAAT,KAAuB;AAClD,8BAAO,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAED,MAAhB;AAAwB,YAAA,QAAQ,EAAE,CAACC,SAAD,EAAYH,MAAZ,CAAlC;AAAuD,YAAA,OAAO,EAAE,MAAMP,iBAAiB,CAAC,CAACU,SAAD,EAAY,IAAIH,MAAhB,CAAD;AAAvF;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA,CADL,eAII;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KATA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA5BD;;GAAMZ,K;;KAAAA,K;AA8BN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Square from './Square';\r\n\r\nconst Board = ({ boardModel }) => {\r\n\r\n    const [board, setBoard] = useState(boardModel);\r\n    const [selectedSquare, setSelectedSquare] = useState('');\r\n\r\n    useEffect(() => {\r\n        console.log(boardModel);\r\n    }, [boardModel]);\r\n\r\n    useEffect(() => {\r\n        console.log(selectedSquare);\r\n        console.log(board[selectedSquare[0]][selectedSquare[1]])\r\n    }, [selectedSquare])\r\n\r\n    return (\r\n        <div>\r\n            {board.slice(0).reverse().map((column, rowKey) => {\r\n                return (\r\n                    <div style={{ display: 'flex' }}>\r\n                        {column.slice(0).reverse().map((square, columnKey) => {\r\n                            return <Square square={square} position={[columnKey, rowKey]} onClick={() => setSelectedSquare([columnKey, 7 - rowKey])} />\r\n                        })}\r\n                        <br />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}