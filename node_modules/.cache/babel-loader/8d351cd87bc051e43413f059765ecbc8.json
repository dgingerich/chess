{"ast":null,"code":"import BoardFactory from \"./Board\";\n\nconst ChessFactory = () => {\n  return Object.create({\n    board: BoardFactory(),\n\n    boardToString() {\n      let boardString = '';\n      boardString = boardString.concat('\\n');\n      this.board.board.forEach(element => {\n        element.forEach(piece => {\n          if (piece === undefined || piece === null) {\n            console.log('here');\n            boardString = boardString.concat('null, ');\n          } else {\n            boardString = boardString.concat(`${piece.piece}, `);\n          }\n        });\n      });\n      console.log(boardString);\n    }\n\n  });\n};\n\n_c = ChessFactory;\nexport default ChessFactory;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChessFactory\");","map":{"version":3,"sources":["C:/Users/dging/Programming/chess/src/model/Chess.js"],"names":["BoardFactory","ChessFactory","Object","create","board","boardToString","boardString","concat","forEach","element","piece","undefined","console","log"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,SAAzB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAEvB,SAAOC,MAAM,CAACC,MAAP,CAAc;AACjBC,IAAAA,KAAK,EAAEJ,YAAY,EADF;;AAEjBK,IAAAA,aAAa,GAAG;AACZ,UAAIC,WAAW,GAAG,EAAlB;AAEAA,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmB,IAAnB,CAAd;AAEA,WAAKH,KAAL,CAAWA,KAAX,CAAiBI,OAAjB,CAAyBC,OAAO,IAAI;AAChCA,QAAAA,OAAO,CAACD,OAAR,CAAgBE,KAAK,IAAI;AACrB,cAAIA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAArC,EAA2C;AACvCE,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAP,YAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmB,QAAnB,CAAd;AACH,WAHD,MAGO;AACHD,YAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAoB,GAAEG,KAAK,CAACA,KAAM,IAAlC,CAAd;AACH;AACJ,SAPD;AAQH,OATD;AAWAE,MAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AAEH;;AApBgB,GAAd,CAAP;AAuBH,CAzBD;;KAAML,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import BoardFactory from \"./Board\";\r\n\r\nconst ChessFactory = () => {\r\n\r\n    return Object.create({\r\n        board: BoardFactory(),\r\n        boardToString() {\r\n            let boardString = '';\r\n\r\n            boardString = boardString.concat('\\n');\r\n            \r\n            this.board.board.forEach(element => {\r\n                element.forEach(piece => {\r\n                    if (piece === undefined || piece === null) {\r\n                        console.log('here')\r\n                        boardString = boardString.concat('null, ')\r\n                    } else {\r\n                        boardString = boardString.concat(`${piece.piece}, `);\r\n                    }\r\n                })\r\n            });\r\n\r\n            console.log(boardString);\r\n\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport default ChessFactory;"]},"metadata":{},"sourceType":"module"}