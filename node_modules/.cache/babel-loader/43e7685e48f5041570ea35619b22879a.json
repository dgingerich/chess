{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dging\\\\Programming\\\\chess\\\\src\\\\components\\\\Square.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Square = _ref => {\n  _s();\n\n  let {\n    square,\n    position\n  } = _ref;\n  const [highlighted, setHighlighted] = useState(false); //Gets Unicode representation of piece\n\n  const getPieceSymbol = () => {\n    if (square.color === 'white') {\n      switch (square.piece) {\n        case 'Pawn':\n          return '\\u2659';\n\n        case 'Bishop':\n          return '\\u2657';\n\n        case 'Knight':\n          return '\\u2658';\n\n        case 'Rook':\n          return '\\u2656';\n\n        case 'Queen':\n          return '\\u2655';\n\n        case 'King':\n          return '\\u2654';\n\n        default:\n          break;\n      }\n    } else {\n      switch (square.piece) {\n        case 'Pawn':\n          return '\\u265F';\n\n        case 'Bishop':\n          return '\\u265D';\n\n        case 'Knight':\n          return '\\u265E';\n\n        case 'Rook':\n          return '\\u265C';\n\n        case 'Queen':\n          return '\\u265B';\n\n        case 'King':\n          return '\\u265A';\n\n        default:\n          break;\n      }\n    }\n\n    return '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100px',\n      height: '100px',\n      backgroundColor: (position[0] + position[1]) % 2 === 0 ? 'white' : 'gray',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '3em'\n      },\n      children: square === null ? '' : getPieceSymbol()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Square, \"RrJuv1jS6DlLejeM8ir9Wu54x6A=\");\n\n_c = Square;\nexport default Square;\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["C:/Users/dging/Programming/chess/src/components/Square.js"],"names":["React","useState","Square","square","position","highlighted","setHighlighted","getPieceSymbol","color","piece","width","height","backgroundColor","display","justifyContent","alignItems","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAG,QAA0B;AAAA;;AAAA,MAAzB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAyB;AAErC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C,CAFqC,CAIrC;;AACA,QAAMM,cAAc,GAAG,MAAM;AACzB,QAAIJ,MAAM,CAACK,KAAP,KAAiB,OAArB,EAA8B;AAC1B,cAAQL,MAAM,CAACM,KAAf;AACI,aAAK,MAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,QAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,QAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,MAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,OAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,MAAL;AACI,iBAAO,QAAP;;AACJ;AACI;AAdR;AAgBH,KAjBD,MAkBK;AACD,cAAQN,MAAM,CAACM,KAAf;AACI,aAAK,MAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,QAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,QAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,MAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,OAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,MAAL;AACI,iBAAO,QAAP;;AACJ;AACI;AAdR;AAiBH;;AAED,WAAO,EAAP;AACH,GAxCD;;AA0CA,sBACI;AAAK,IAAA,KAAK,EAAE;AACRC,MAAAA,KAAK,EAAE,OADC;AAERC,MAAAA,MAAM,EAAE,OAFA;AAGRC,MAAAA,eAAe,EAAG,CAACR,QAAQ,CAAC,CAAD,CAAR,GAAcA,QAAQ,CAAC,CAAD,CAAvB,IAA8B,CAA9B,KAAoC,CAArC,GAA0C,OAA1C,GAAoD,MAH7D;AAIRS,MAAAA,OAAO,EAAE,MAJD;AAKRC,MAAAA,cAAc,EAAE,QALR;AAMRC,MAAAA,UAAU,EAAE;AANJ,KAAZ;AAAA,2BAQI;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAA,gBAAgCb,MAAM,KAAK,IAAX,GAAkB,EAAlB,GAAuBI,cAAc;AAArE;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA3DD;;GAAML,M;;KAAAA,M;AA6DN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Square = ({ square, position }) => {\r\n\r\n    const [highlighted, setHighlighted] = useState(false);\r\n\r\n    //Gets Unicode representation of piece\r\n    const getPieceSymbol = () => {\r\n        if (square.color === 'white') {\r\n            switch (square.piece) {\r\n                case 'Pawn':\r\n                    return '\\u2659';\r\n                case 'Bishop':\r\n                    return '\\u2657';\r\n                case 'Knight':\r\n                    return '\\u2658';\r\n                case 'Rook':\r\n                    return '\\u2656';\r\n                case 'Queen':\r\n                    return '\\u2655';\r\n                case 'King':\r\n                    return '\\u2654';\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            switch (square.piece) {\r\n                case 'Pawn':\r\n                    return '\\u265F';\r\n                case 'Bishop':\r\n                    return '\\u265D';\r\n                case 'Knight':\r\n                    return '\\u265E';\r\n                case 'Rook':\r\n                    return '\\u265C';\r\n                case 'Queen':\r\n                    return '\\u265B';\r\n                case 'King':\r\n                    return '\\u265A';\r\n                default:\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            width: '100px',\r\n            height: '100px',\r\n            backgroundColor: ((position[0] + position[1]) % 2 === 0) ? 'white' : 'gray',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <p style={{ fontSize: '3em' }}>{square === null ? '' : getPieceSymbol()}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square;"]},"metadata":{},"sourceType":"module"}