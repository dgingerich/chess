{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dging\\\\Programming\\\\chess\\\\src\\\\components\\\\Square.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Square = _ref => {\n  let {\n    square,\n    position\n  } = _ref;\n\n  //Gets Unicode representation of piece\n  const getPieceSymbol = () => {\n    if (square.color === 'white') {\n      switch (square.piece) {\n        case 'Pawn':\n          return '\\u2659';\n\n        case 'Bishop':\n          return '\\u2657';\n\n        case 'Knight':\n          return '\\u2658';\n\n        case 'Rook':\n          return '\\u2656';\n\n        case 'Queen':\n          return '\\u2655';\n\n        case 'King':\n          return '\\u2654';\n\n        default:\n          break;\n      }\n    } else {\n      switch (square.piece) {\n        case 'Pawn':\n          return '\\u265F';\n\n        case 'Bishop':\n          return '\\u265D';\n\n        case 'Knight':\n          return '\\u265E';\n\n        case 'Rook':\n          return '\\u265C';\n\n        case 'Queen':\n          return '\\u265B';\n\n        case 'King':\n          return '\\u265A';\n\n        default:\n          break;\n      }\n    }\n\n    return '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100px',\n      height: '100px',\n      backgroundColor: (position[0] + position[1]) % 2 === 0 ? 'white' : 'gray',\n      display: 'flex',\n      justifyContent: 'center',\n      verticalAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '1em'\n      },\n      children: square === null ? '' : getPieceSymbol()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Square;\nexport default Square;\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["C:/Users/dging/Programming/chess/src/components/Square.js"],"names":["React","Square","square","position","getPieceSymbol","color","piece","width","height","backgroundColor","display","justifyContent","verticalAlign","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,QAA0B;AAAA,MAAzB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAyB;;AAErC;AACA,QAAMC,cAAc,GAAG,MAAM;AACzB,QAAIF,MAAM,CAACG,KAAP,KAAiB,OAArB,EAA8B;AAC1B,cAAQH,MAAM,CAACI,KAAf;AACI,aAAK,MAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,QAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,QAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,MAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,OAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,MAAL;AACI,iBAAO,QAAP;;AACJ;AACI;AAdR;AAgBH,KAjBD,MAkBK;AACD,cAAQJ,MAAM,CAACI,KAAf;AACI,aAAK,MAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,QAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,QAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,MAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,OAAL;AACI,iBAAO,QAAP;;AACJ,aAAK,MAAL;AACI,iBAAO,QAAP;;AACJ;AACI;AAdR;AAiBH;;AAED,WAAO,EAAP;AACH,GAxCD;;AA0CA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE,OAA1B;AAAmCC,MAAAA,eAAe,EAAG,CAACN,QAAQ,CAAC,CAAD,CAAR,GAAcA,QAAQ,CAAC,CAAD,CAAvB,IAA8B,CAA9B,KAAoC,CAArC,GAA0C,OAA1C,GAAoD,MAAxG;AAAgHO,MAAAA,OAAO,EAAE,MAAzH;AAAiIC,MAAAA,cAAc,EAAE,QAAjJ;AAA2JC,MAAAA,aAAa,EAAE;AAA1K,KAAZ;AAAA,2BACI;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAV;AAAA,gBAA8BX,MAAM,KAAK,IAAX,GAAkB,EAAlB,GAAuBE,cAAc;AAAnE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlDD;;KAAMH,M;AAoDN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\n\r\nconst Square = ({ square, position }) => {\r\n\r\n    //Gets Unicode representation of piece\r\n    const getPieceSymbol = () => {\r\n        if (square.color === 'white') {\r\n            switch (square.piece) {\r\n                case 'Pawn':\r\n                    return '\\u2659';\r\n                case 'Bishop':\r\n                    return '\\u2657';\r\n                case 'Knight':\r\n                    return '\\u2658';\r\n                case 'Rook':\r\n                    return '\\u2656';\r\n                case 'Queen':\r\n                    return '\\u2655';\r\n                case 'King':\r\n                    return '\\u2654';\r\n                default: \r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            switch (square.piece) {\r\n                case 'Pawn':\r\n                    return '\\u265F';\r\n                case 'Bishop':\r\n                    return '\\u265D';\r\n                case 'Knight':\r\n                    return '\\u265E';\r\n                case 'Rook':\r\n                    return '\\u265C';\r\n                case 'Queen':\r\n                    return '\\u265B';\r\n                case 'King':\r\n                    return '\\u265A';\r\n                default: \r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100px', height: '100px', backgroundColor: ((position[0] + position[1]) % 2 === 0) ? 'white' : 'gray', display: 'flex', justifyContent: 'center', verticalAlign: 'center' }}>\r\n            <p style={{fontSize: '1em'}}>{square === null ? '' : getPieceSymbol()}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square;"]},"metadata":{},"sourceType":"module"}